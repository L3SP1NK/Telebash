#!/bin/bash
## Send messages/documents with your Telegram bot.
## Check telegram-cli if you want more advanced features.

RC="\e[0m"
GREY="\e[37m"
YELLOW="\e[33m"
GREEN="\e[32m"
CYAN="\e[36m"
RED="\e[31m"
BOLD="\e[1m"
UNDERLINE="\e[4m"
ITALIC="\e[3m"

TELEBASH_PATH="${HOME}/.config/telebash"
TELEGRAM_TOKEN="${TELEBASH_PATH}/telegram_token.txt"
TELEBASH_LOGO="${TELEBASH_PATH}/logo.txt"

if [[ -f ${TELEGRAM_TOKEN} ]]
	then
		source ${TELEGRAM_TOKEN}
		[[ ${TELEGRAM_TOKEN} == "" ]] && echo -e "\n${RED}${BOLD} Token${RC}${RED} config file found but contain nothing!\n Exiting...${RC}\n"
	else
		echo -e "\n${RED} Token is missing!${RC}\n Get one with ${CYAN}${BOLD}@botfather${RC} on Telegram.\n" && exit 1
fi

DISPLAY_HELP()
{
	[[ -f ${TELEBASH_LOGO} ]] && cat ${TELEBASH_LOGO}
	echo -e " ${UNDERLINE}${BOLD}Usage:${RC}"
	echo -e "  ./telebash ${GREY}<${RC}options${GREY}> <${RC}command/file/url/text${GREY}> <${RC}chat ID${GREY}> ${RC}\n"
	echo -e "  To get a chat ID, run this script with the '-u' flag.\n"
	echo -e " ${UNDERLINE}${BOLD}Options:${RC}"
	echo -e "  ${YELLOW}${BOLD}-c${RC},${YELLOW}${BOLD}	--command${RC}		<command>			(Telegram can't handle large command output)."
	echo -e "  ${YELLOW}${BOLD}-d${RC},${YELLOW}${BOLD}	--doc${RC}			<URL to document>		Send a files on the internet."
	echo -e "  ${YELLOW}${BOLD}-h${RC},${YELLOW}${BOLD}	--help${RC}							Display this help."
	echo -e "  ${YELLOW}${BOLD}-u${RC},${YELLOW}${BOLD}	--update${RC}						Get the latest infos (groups, messages...)."
	echo -e "  ${YELLOW}${BOLD}-t${RC},${YELLOW}${BOLD}	--text${RC}			<text>				Send a text message.\n"
}

TELEGRAM_API="https://api.telegram.org/bot${TELEGRAM_TOKEN}"
TELEGRAM_CHAT_ID="${3}"

SEND_MESSAGE()
{
	ENDPOINT="sendMessage"
	PARSE_MODE="html" ## "html" or "markdown"
	curl -s -d "chat_id=${TELEGRAM_CHAT_ID}&parse_mode=${PARSE_MODE}&text=${TEXT}" ${TELEGRAM_API}/${ENDPOINT} | jq
}

GET_UPDATE()

{
	curl -s "https://api.telegram.org/bot${TELEGRAM_TOKEN}/getUpdates" | jq
}

REQUIREMENTS="curl jq"

which ${REQUIREMENTS} > /dev/null

if [[ ${?} -eq "0" ]]
	then
		case ${1} in
			-h| --help)
				DISPLAY_HELP
				;;
			-t|--text)
				TEXT="${2}"
				SEND_MESSAGE
				;;
			-u| --update)
				GET_UPDATE
				;;
			*)
				DISPLAY_HELP
				;;
		esac
	else
		echo -e "${RED}\n To run this program, you need the following packages installed: ${BOLD}${REQUIREMENTS}${RC}\n${RED} Exiting...${RC}\n"
		exit 1
fi
